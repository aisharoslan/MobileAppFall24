{"ast":null,"code":"var _jsxFileName = \"/Users/aishasabrina/Desktop/MobileAppFall24/Week03/comp-lib-start/src/pages/ModalPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Button from '../components/Button';\nimport Modal from '../components/Modal';\n\n// state check here! not in Modal.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModalPage() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false); // start with a closed modal\n  const handleClick = () => {\n    setIsModalOpen(true); // modal will be in charge of closing it\n  };\n  const handleClose = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    /*#__PURE__*/\n    // BOTH Modal and Button need to know about the current state - sibling component needs to setState to affect this Modal, so the parent needs to keep track of that state\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        outline: true,\n        className: \"m-4\",\n        onClick: handleClick,\n        children: \"Open Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        danger: true,\n        outline: true,\n        className: \"m-4\",\n        onClick: handleClose,\n        children: \"Close Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(ModalPage, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = ModalPage;\nvar _c;\n$RefreshReg$(_c, \"ModalPage\");","map":{"version":3,"names":["useState","Button","Modal","jsxDEV","_jsxDEV","ModalPage","_s","isModalOpen","setIsModalOpen","handleClick","handleClose","children","primary","outline","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","danger","_c","$RefreshReg$"],"sources":["/Users/aishasabrina/Desktop/MobileAppFall24/Week03/comp-lib-start/src/pages/ModalPage.js"],"sourcesContent":["import { useState } from 'react'\nimport Button from '../components/Button'\nimport Modal from '../components/Modal'\n\n// state check here! not in Modal.js\nexport default function ModalPage() {\n    const [isModalOpen, setIsModalOpen] = useState(false) // start with a closed modal\n    const handleClick = () => {\n        setIsModalOpen(true) // modal will be in charge of closing it\n    }\n\n    const handleClose = () => {\n        setIsModalOpen(false)\n    }\n    \n    return (\n        // BOTH Modal and Button need to know about the current state - sibling component needs to setState to affect this Modal, so the parent needs to keep track of that state\n        <div>\n            <Button primary outline className=\"m-4\" onClick={handleClick}>\n                Open Modal\n            </Button>\n            <Button danger outline className=\"m-4\" onClick={handleClose}>\n                Close Modal\n            </Button>\n            { isModalOpen && <Modal /> }\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,EAAC;EACtD,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACtBD,cAAc,CAAC,IAAI,CAAC,EAAC;EACzB,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACtBF,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED;IAAA;IACI;IACAJ,OAAA;MAAAO,QAAA,gBACIP,OAAA,CAACH,MAAM;QAACW,OAAO;QAACC,OAAO;QAACC,SAAS,EAAC,KAAK;QAACC,OAAO,EAAEN,WAAY;QAAAE,QAAA,EAAC;MAE9D;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTf,OAAA,CAACH,MAAM;QAACmB,MAAM;QAACP,OAAO;QAACC,SAAS,EAAC,KAAK;QAACC,OAAO,EAAEL,WAAY;QAAAC,QAAA,EAAC;MAE7D;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACPZ,WAAW,iBAAIH,OAAA,CAACF,KAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;AAEd;AAACb,EAAA,CAtBuBD,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}