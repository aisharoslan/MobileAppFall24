{"ast":null,"code":"var _jsxFileName = \"/Users/aishasabrina/Desktop/MobileAppFall24/Week03/comp-lib-start/src/components/Accordion.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// writing in React - can change to jsx to indicate it's a component\n// props and state - all it did was apply style in the past\n// content as data coming in as a prop\n// need a click action\n// where does data live and where does state live?\n\nexport default function Accordion(props) {\n  // content isn't part of the Accordion bc we want it to be reusable for different info\n  const {\n    items\n  } = props;\n  const renderedItems = items.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderedItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n}\n_c = Accordion;\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["Accordion","props","items","renderedItems","map","item","index","_jsxDEV","children","label","fileName","_jsxFileName","lineNumber","columnNumber","content","id","_c","$RefreshReg$"],"sources":["/Users/aishasabrina/Desktop/MobileAppFall24/Week03/comp-lib-start/src/components/Accordion.js"],"sourcesContent":["// writing in React - can change to jsx to indicate it's a component\n// props and state - all it did was apply style in the past\n// content as data coming in as a prop\n// need a click action\n// where does data live and where does state live?\n\nexport default function Accordion(props) {\n    // content isn't part of the Accordion bc we want it to be reusable for different info\n    const {items} = props\n    const renderedItems = items.map((item, index) => { \n        return (\n            <div key={item.id}>\n                <div>{item.label}</div>\n                <div>{item.content}</div>\n            </div>\n        )\n    })\n    return (<div>\n        {renderedItems}\n    </div>)\n}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASA,SAASA,CAACC,KAAK,EAAE;EACrC;EACA,MAAM;IAACC;EAAK,CAAC,GAAGD,KAAK;EACrB,MAAME,aAAa,GAAGD,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC7C,oBACIC,OAAA;MAAAC,QAAA,gBACID,OAAA;QAAAC,QAAA,EAAMH,IAAI,CAACI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvBN,OAAA;QAAAC,QAAA,EAAMH,IAAI,CAACS;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GAFnBR,IAAI,CAACU,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CAAC;EAEd,CAAC,CAAC;EACF,oBAAQN,OAAA;IAAAC,QAAA,EACHL;EAAa;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AACV;AAACG,EAAA,GAduBhB,SAAS;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}