{"ast":null,"code":"var _jsxFileName = \"/Users/aishasabrina/Desktop/MobileAppFall24/Week03/comp-lib-start/src/pages/ModalPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Button from '../components/Button';\nimport Modal from '../components/Modal';\n\n// state check here! not in Modal.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModalPage() {\n  _s();\n  const [isModalOpen, setIsModelOpen] = useState(true); // start with a closed modal\n  return (\n    /*#__PURE__*/\n    // BOTH Modal and Button need to know about the current state - sibling component needs to setState to affect this Modal, so the parent needs to keep track of that state\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        outline: true,\n        className: \"m-4\",\n        children: \"Open Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(ModalPage, \"IuNzbA3kACfls74hLOmxEzT07ZQ=\");\n_c = ModalPage;\nvar _c;\n$RefreshReg$(_c, \"ModalPage\");","map":{"version":3,"names":["useState","Button","Modal","jsxDEV","_jsxDEV","ModalPage","_s","isModalOpen","setIsModelOpen","children","primary","outline","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aishasabrina/Desktop/MobileAppFall24/Week03/comp-lib-start/src/pages/ModalPage.js"],"sourcesContent":["import { useState } from 'react'\nimport Button from '../components/Button'\nimport Modal from '../components/Modal'\n\n// state check here! not in Modal.js\nexport default function ModalPage() {\n    const [isModalOpen, setIsModelOpen] = useState(true) // start with a closed modal\n    return (\n        // BOTH Modal and Button need to know about the current state - sibling component needs to setState to affect this Modal, so the parent needs to keep track of that state\n        <div>\n            <Button primary outline className=\"m-4\">\n                Open Modal\n            </Button>\n            { isModalOpen && <Modal /> }\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,EAAC;EACrD;IAAA;IACI;IACAI,OAAA;MAAAK,QAAA,gBACIL,OAAA,CAACH,MAAM;QAACS,OAAO;QAACC,OAAO;QAACC,SAAS,EAAC,KAAK;QAAAH,QAAA,EAAC;MAExC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACPT,WAAW,iBAAIH,OAAA,CAACF,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;AAEd;AAACV,EAAA,CAXuBD,SAAS;AAAAY,EAAA,GAATZ,SAAS;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}