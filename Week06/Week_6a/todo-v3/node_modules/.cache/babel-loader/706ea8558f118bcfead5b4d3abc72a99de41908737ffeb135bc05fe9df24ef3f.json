{"ast":null,"code":"var _jsxFileName = \"/Users/aishasabrina/Desktop/MobileAppFall24/Week06/Week_6a/todo-v3/src/context/Todos.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/createContext(); // creates a TodoContext component\n\nfunction Provider({\n  children\n}) {\n  _s();\n  // const [count, setCount] = useState(5)\n\n  // const incrementCount = () => {\n  //     setCount(count + 1)\n  // }\n\n  // const valueToShare = {\n  //     count, // same as count: count\n  //     incrementCount // same as incrementCount = () => { setCount(count + 1) }\n  // }\n  const [todos, setTodos] = useState([]);\n  const fetchTodos = async () => {\n    const response = await axios.get('http://localhost:3001/todos');\n    setTodos(response.data);\n  };\n  const createTodo = async title => {\n    const response = await axios.post('http://localhost:3001/todos', {\n      title\n    });\n    // always make a copy and add the new at the end\n    const updatedTodos = [...todos, response.data];\n    // always set with the copy so react knows to compare 2 different slots in its memory\n    setTodos(updatedTodos);\n  };\n  const editTodoById = async (id, newTitle) => {\n    const response = await axios.put(`http://localhost:3001/todos/${id}`, {\n      title: newTitle\n    });\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          ...response.data\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const deleteTodoById = async id => {\n    await axios.delete(`http://localhost:3001/todos/${id}`);\n    const updatedTodos = todos.filter(todo => {\n      // return truthy keeps, falsey removes!\n      return todo.id !== id;\n    });\n    setTodos(updatedTodos);\n  };\n  return (\n    /*#__PURE__*/\n    // <TodoContext.Provider value={valueToShare}>\n    //     {children}\n    // </TodoContext.Provider>\n    _jsxDEV(TodoContext.Provider, {\n      value: {},\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n// named exports\n_s(Provider, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n_c = Provider;\nexport { Provider };\nexport default TodoContext;\n\n// import both in the same file\n// import TodoContext, {Provider} from './....'\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["axios","createContext","useState","jsxDEV","_jsxDEV","TodoContext","Provider","children","_s","todos","setTodos","fetchTodos","response","get","data","createTodo","title","post","updatedTodos","editTodoById","id","newTitle","put","map","todo","deleteTodoById","delete","filter","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aishasabrina/Desktop/MobileAppFall24/Week06/Week_6a/todo-v3/src/context/Todos.js"],"sourcesContent":["import axios from 'axios'\nimport { createContext, useState } from 'react'\n\nconst TodoContext = createContext() // creates a TodoContext component\n\nfunction Provider({children}) {\n    // const [count, setCount] = useState(5)\n\n    // const incrementCount = () => {\n    //     setCount(count + 1)\n    // }\n\n    // const valueToShare = {\n    //     count, // same as count: count\n    //     incrementCount // same as incrementCount = () => { setCount(count + 1) }\n    // }\n    const [todos, setTodos] = useState([])\n\n    const fetchTodos = async () => {\n        const response = await axios.get('http://localhost:3001/todos')\n        setTodos(response.data)\n    }\n\n    const createTodo = async (title) => {\n        const response = await axios.post('http://localhost:3001/todos', {title})\n        // always make a copy and add the new at the end\n        const updatedTodos = [...todos, response.data]\n        // always set with the copy so react knows to compare 2 different slots in its memory\n        setTodos(updatedTodos)\n    }\n    \n    const editTodoById = async (id, newTitle) => {\n        const response = await axios.put(`http://localhost:3001/todos/${id}`, {\n          title: newTitle,\n        })\n    \n        const updatedTodos = todos.map((todo) => {\n          if (todo.id === id) {\n            return {...todo, ...response.data}\n          }\n          return todo\n        })\n        setTodos(updatedTodos)\n    }\n    \n    const deleteTodoById = async (id) => {\n        await axios.delete(`http://localhost:3001/todos/${id}`)\n    \n        const updatedTodos = todos.filter((todo) => {\n          // return truthy keeps, falsey removes!\n          return todo.id !== id\n        })\n    \n        setTodos(updatedTodos)\n    }\n\n    return (\n        // <TodoContext.Provider value={valueToShare}>\n        //     {children}\n        // </TodoContext.Provider>\n        <TodoContext.Provider value={{}}>\n            {children}\n        </TodoContext.Provider>\n    )\n}\n\n// named exports\nexport { Provider }\nexport default TodoContext\n\n// import both in the same file\n// import TodoContext, {Provider} from './....'"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC,EAAC;;AAEpC,SAASK,QAAQA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC1B;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,6BAA6B,CAAC;IAC/DH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;IAChC,MAAMJ,QAAQ,GAAG,MAAMZ,KAAK,CAACiB,IAAI,CAAC,6BAA6B,EAAE;MAACD;IAAK,CAAC,CAAC;IACzE;IACA,MAAME,YAAY,GAAG,CAAC,GAAGT,KAAK,EAAEG,QAAQ,CAACE,IAAI,CAAC;IAC9C;IACAJ,QAAQ,CAACQ,YAAY,CAAC;EAC1B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAOC,EAAE,EAAEC,QAAQ,KAAK;IACzC,MAAMT,QAAQ,GAAG,MAAMZ,KAAK,CAACsB,GAAG,CAAC,+BAA+BF,EAAE,EAAE,EAAE;MACpEJ,KAAK,EAAEK;IACT,CAAC,CAAC;IAEF,MAAMH,YAAY,GAAGT,KAAK,CAACc,GAAG,CAAEC,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAC,GAAGI,IAAI;UAAE,GAAGZ,QAAQ,CAACE;QAAI,CAAC;MACpC;MACA,OAAOU,IAAI;IACb,CAAC,CAAC;IACFd,QAAQ,CAACQ,YAAY,CAAC;EAC1B,CAAC;EAED,MAAMO,cAAc,GAAG,MAAOL,EAAE,IAAK;IACjC,MAAMpB,KAAK,CAAC0B,MAAM,CAAC,+BAA+BN,EAAE,EAAE,CAAC;IAEvD,MAAMF,YAAY,GAAGT,KAAK,CAACkB,MAAM,CAAEH,IAAI,IAAK;MAC1C;MACA,OAAOA,IAAI,CAACJ,EAAE,KAAKA,EAAE;IACvB,CAAC,CAAC;IAEFV,QAAQ,CAACQ,YAAY,CAAC;EAC1B,CAAC;EAED;IAAA;IACI;IACA;IACA;IACAd,OAAA,CAACC,WAAW,CAACC,QAAQ;MAACsB,KAAK,EAAE,CAAC,CAAE;MAAArB,QAAA,EAC3BA;IAAQ;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC;AAE/B;;AAEA;AAAAxB,EAAA,CA7DSF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA8DjB,SAASA,QAAQ;AACjB,eAAeD,WAAW;;AAE1B;AACA;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}